# -*- mode: Snakemake -*-
# Sequence Alignment: BWA based

rule build_ref:
  input: "panels/" + config["Panel"] + ".csv"
  output: temp("genomes/" + config["Panel"] + ".tmp.fasta")
  params: 
    tool="tools/rtools/gen_panal_refs.R",
    ref=config["RefGenome"]
  log:
    RUN_DIR + "/logs/panel.ref.log"
  shell:
    "Rscript {params.tool} {input} -o {output} -r {params.ref} > {log} 2>&1"

rule index_ref:
  input: "genomes/" + config["Panel"] + ".tmp.fasta"
  output: "genomes/" + config["Panel"] + ".fasta"
  params: "genomes/" + config["Panel"]
  shell:
    "bwa index -p {params} {input}"

rule align:
  input:
    seq = RUN_DIR + "/processData/{sample}.consol.fasta",
    genome = ancient("genomes/" + config["Panel"] + ".fasta")
  output:
    temp(RUN_DIR + "/processData/{sample}.unsorted.bam")
  params: 
    config["BWAparams"]
  shell:
    "bwa mem {params} {input.genome} {input.seq} | samtools view -b -o {output}"
    
rule sort_bam:
  input: RUN_DIR + "/processData/{sample}.unsorted.bam"
  output: RUN_DIR + "/processData/{sample}.bam"
  shell: "samtools sort {input} -o {output}"

rule index_bam:
  input: RUN_DIR + "/processData/{sample}.bam"
  output: RUN_DIR + "/processData/{sample}.bai"
  shell: "samtools index -b {input} {output}"
