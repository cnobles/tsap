# -*- mode: Snakemake -*-
# Sequence Alignment: BWA based

rule build_ref:
  input: "panels/" + config["Panel"] + ".csv"
  output: temp("genomes/" + config["Panel"] + ".tmp.fasta")
  params: 
    tool="tools/rtools/gen_panal_refs.R",
    ref=config["RefGenome"]
  log:
    RUN_DIR + "/logs/panel.ref.log"
  shell:
    "Rscript {params.tool} {input} -o {output} -r {params.ref} > {log} 2>&1"

rule index_ref:
  input: "genomes/" + config["Panel"] + ".tmp.fasta"
  output: 
    ref="genomes/" + config["Panel"] + ".fasta",
    aux1="genomes/" + config["Panel"] + ".amb",
    aux2="genomes/" + config["Panel"] + ".ann",
    aux3="genomes/" + config["Panel"] + ".bwt",
    aux4="genomes/" + config["Panel"] + ".pac",
    aux5="genomes/" + config["Panel"] + ".sa"
  params: "genomes/" + config["Panel"]
  shell:
    """
    cp {input} {output.ref}
    bwa index -p {params} {output.ref}
    """

rule align:
  input:
    seq=RUN_DIR + "/processData/{sample}.consol.fasta",
    genome=ancient("genomes/" + config["Panel"] + ".fasta"),
    aux1=ancient("genomes/" + config["Panel"] + ".amb"),
    aux2=ancient("genomes/" + config["Panel"] + ".ann"),
    aux3=ancient("genomes/" + config["Panel"] + ".bwt"),
    aux4=ancient("genomes/" + config["Panel"] + ".pac"),
    aux5=ancient("genomes/" + config["Panel"] + ".sa")
  output:
    temp(RUN_DIR + "/processData/{sample}.unsorted.bam")
  params: 
    bwa=config["BWAparams"],
    index="genomes/" + config["Panel"]
  shell:
    "bwa mem {params.bwa} {params.index} {input.seq} | samtools view -b -o {output}"
    
rule sort_bam:
  input: RUN_DIR + "/processData/{sample}.unsorted.bam"
  output: RUN_DIR + "/processData/{sample}.bam"
  shell: "samtools sort {input} -o {output}"

rule index_bam:
  input: RUN_DIR + "/processData/{sample}.bam"
  output: RUN_DIR + "/processData/{sample}.bai"
  shell: "samtools index -b {input} {output}"
