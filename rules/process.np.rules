# -*- mode: Snakemake -*-
# Processing Rules for Nanopore sequencing workflow

rule post_align_process:
  input:
    com_bam=RUN_DIR + "/processData/{sample}.com.bam",
    com_bai=RUN_DIR + "/processData/{sample}.com.bai",
    #inc_bam=RUN_DIR + "/processData/{sample}.inc.bam",
    #inc_bai=RUN_DIR + "/processData/{sample}.inc.bai",
    con=ancient(RUN_DIR + "/config.yml"),
    ref=ROOT_DIR + "/genomes/" + PANEL + ".fasta"
  output:
    uniq=temp(RUN_DIR + "/processData/{sample}.uniq.csv"),
    chim=temp(RUN_DIR + "/processData/{sample}.chim.csv")
  params: ROOT_DIR + "/tools/rscripts/post_algn_process.R"
  log: RUN_DIR + "/logs/{sample}.postalgn.log"
  shell:
    """
    Rscript {params} {input.com_bam} \
      -i {input.com_bai} -c {input.con} \
      -r {input.ref} -o {output.uniq} -a {output.chim} > {log} 2>&1
    """

rule collate_unique:
  input:
    expand(RUN_DIR + "/processData/{sample}.uniq.csv", sample=SAMPLES)
  output: RUN_DIR + "/output/unique_aligns." + RUN + ".csv"
  params: RUN_DIR + "/processData"
  shell:
    """
    head -n 1 -q {params}/*.uniq.csv | uniq > {output}
    cat {params}/*.uniq.csv | sed '/qname/d' >> {output}
    """

rule collate_chimera:
  input:
    expand(RUN_DIR + "/processData/{sample}.chim.csv", sample=SAMPLES)
  output: RUN_DIR + "/output/chimera_aligns." + RUN + ".csv"
  params: RUN_DIR + "/processData"
  shell:
    """
    head -n 1 -q {params}/*.chim.csv | uniq > {output}
    cat {params}/*.chim.csv | sed '/qname/d' >> {output}
    """

def report_supp(wildcards):
  supp_str = str()
  if (config["format"] == "pdf"):
      supp_str = supp_str + "-t pdf "
  if (config["figures"]):
      supp_str = supp_str + "-f "
  if (config["reportData"]):
      supp_str = supp_str + "-d "
  if (config["suppFile"]):
      supp_str = supp_str + "-s " + ROOT_DIR + "/" + config["Supplemental_Info"]
  return supp_str

rule generate_summary:
  input:
    uni=RUN_DIR + "/output/unique_aligns." + RUN + ".csv",
    chi=RUN_DIR + "/output/chimera_aligns." + RUN + ".csv",
    con=RUN_DIR + "/config.yml",
    ref=ROOT_DIR + "/genomes/" + PANEL + ".fasta"
  output: report_output
  params:
    tool=ROOT_DIR + "/tools/rscripts/generate_summary.R",
    supp=report_supp
  log: RUN_DIR + "/logs/" + RUN + ".report.log"
  shell:
    """
    Rscript {params.tool} -u {input.uni} -a {input.chi} -c {input.con}\
      -o {output} -r {input.ref} {params.supp} > {log} 2>&1
    """
