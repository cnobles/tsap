# -*- mode: Snakemake -*-
# Sequence Filtering Rules

rule check_ovlp:
  input:
    bamR1=RUN_DIR + "/processData/{sample}.R1.pre.bam",
    baiR1=RUN_DIR + "/processData/{sample}.R1.pre.bai",
    bamR2=RUN_DIR + "/processData/{sample}.R2.pre.bam",
    baiR2=RUN_DIR + "/processData/{sample}.R2.pre.bai",
    ref=ancient("genomes/" + config["Panel"] + ".fasta")
  output:
    temp(RUN_DIR + "/processData/{sample}.ovlp.txt")
  params:
    tool=ROOT_DIR + "/tools/rtools/which_overlap.R",
    min=config["minOverlap"]
  log:
    RUN_DIR + "/logs/{sample}.which.log"
  shell:
    """
    Rscript {params.tool} -f {input.bamR1} --fi {input.baiR1} \
      -r {input.bamR2} --ri {input.baiR2} --ref {input.ref} \
      -o {output} > {log} 2>&1
    """


rule seq_filter_R1:
  input:
    seq=RUN_DIR + "/processData/{sample}.R1.trim.fastq.gz",
    txt=RUN_DIR + "/processData/{sample}.ovlp.txt"
  output:
    temp(RUN_DIR + "/processData/{sample}.R1.filt.fastq.gz")
  params:
    tool=ROOT_DIR + "/tools/seqFiltR/seqFilt.R"
  log:
    RUN_DIR + "/logs/{sample}.filt.log"
  shell:
    """
    Rscript {params.tool} {input.seq} -i {input.txt} --header -o {output} \
      --compress > {log} 2>&1
    """

rule seq_filter_R2:
  input:
    seq=RUN_DIR + "/processData/{sample}.R2.trim.fastq.gz",
    txt=RUN_DIR + "/processData/{sample}.ovlp.txt"
  output:
    temp(RUN_DIR + "/processData/{sample}.R2.filt.fastq.gz")
  params:
    tool=ROOT_DIR + "/tools/seqFiltR/seqFilt.R"
  log:
    RUN_DIR + "/logs/{sample}.filt.log"
  shell:
    """
    Rscript {params.tool} {input.seq} -i {input.txt} --header -o {output} \
      --compress > {log} 2>&1
    """
